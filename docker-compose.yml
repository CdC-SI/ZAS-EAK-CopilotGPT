version: '3.8'

services:
  # db service
  db:
    build:
      context: src/db
      dockerfile: Dockerfile
    image: copilot-postgresql-db
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - ./src/db/data:/var/lib/postgresql/data
    networks:
      - copilot-network
    restart: "no"

  # support tool for db
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8081:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./src/pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      - db
    networks:
      - copilot-network
    restart: "no"

  copilot:
    build:
      context: src/copilot
      dockerfile: Dockerfile
    image: copilot
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./src/copilot/app:/app
    networks:
      - copilot-network
    depends_on:
      - db
    restart: "no"

  # frontend
  zas-copilot:
    build:
      context: https://github.com/CdC-SI/copilot-frontend.git#main
    image: zas-copilot:latest
    environment:
      - ENVIRONMENT=development
    ports:
      - "4200:4200"
    networks:
      - copilot-network
    depends_on:
      - zas-security
    restart: "no"

  # security service
  zas-security:
    build:
      context: https://github.com/CdC-SI/copilot-backend.git#main
    image: zas-security:latest
    env_file:
      - .env
    environment:
      - DS_URL=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - DS_USERNAME=${POSTGRES_USER}
      - DS_PASSWORD=${POSTGRES_PASSWORD}
      - PY_BACKEND_URL=${PY_BACKEND_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    ports:
      - "8080:8080"
    networks:
      - copilot-network
    depends_on:
      - db
      - copilot
    restart: "no"

  # Logging db service for langfuse
  langfuse-db:
    image: postgres:16
    environment:
      - POSTGRES_USER=langfuse_user
      - POSTGRES_PASSWORD=langfuse_password
      - POSTGRES_DB=langfuse_db
    volumes:
      - langfuse_db_data:/var/lib/postgresql/data
    networks:
      - langfuse-network
    restart: "always"

  # Langfuse service
  langfuse:
    image: langfuse/langfuse:2
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://langfuse_user:langfuse_password@langfuse-db:5432/langfuse_db
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - SALT=${SALT}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    networks:
      - langfuse-network
    depends_on:
      - langfuse-db
    restart: "no"

  # In-memory cache
  redis:
    image: redis:latest
    container_name: redis_db
    ports:
      - "6379:6379"
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - copilot-network
    depends_on:
      - copilot
    restart: "no"

networks:
  copilot-network:
    driver: bridge
  langfuse-network:
    driver: bridge

volumes:
  langfuse_db_data:
  redis_data:
    driver: local